#
# cloudformation-template.yaml - Template to deploy AWS resources
# Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is distributed 
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
# express or implied. See the License for the specific language governing 
#  permissions and limitations under the License.
#

AWSTemplateFormatVersion: 2010-09-09
Description: Reduce latency of hybrid architectures with Amazon ElastiCache

Metadata:
    About:
        Description: "Reduce latency of hybrid architectures with Amazon ElastiCache"
    Author:
        Description: "Angel Leon"
    Date:
        Description: "2017-05-30"

Parameters:
    Architect:
        Type: String
        Default: My Name
        Description: "Architects Name"
    ArchitectEmail:
        Type: String
        Default: email@domain.com
        Description: "Architects Email"
    Project:
        Type: String
        Default: ElastiCacheDemo
        Description: "Project Name"
    Customer:
        Type: String
        Default: My Customer Name
        Description: "Customer Name"
    CustomerAddress:
        Type: String
        Default: 0.0.0.0/0
        Description: "Customer public address, used for SSH access"
    CacheInstanceType:
        Type: String
        Default: cache.t2.small
        Description: "ElastiCache Instance types, i.e. cache.t2.small, cache.m3.large, etc"
        AllowedValues:
            - cache.t2.micro
            - cache.t2.small
            - cache.t2.medium
            - cache.m3.medium
            - cache.m3.large
            - cache.m3.xlarge
            - cache.m3.2xlarge
    CacheClusterName:
        Type: String
        Default: "MyCluster"
        Description: "Cache Cluster Name"
    CachePort:
        Type: Number
        Default: 6379
        Description: "Amazon ElastiCache port"
    CacheEngine:
        Type: String
        Default: redis
        Description: "Amazon ElastiCache Engine, redis or memcached"
        AllowedValues:
            - redis
            - memcached
    CacheEngineVersion:
        Type: String
        Default: 3.2.4
        Description: "Amazon ElastiCache Engine version"
    WebInstanceType:
        Type: String
        Default: t2.small
        Description: "Instance type, i.e. t2.small, m3.large, m4.xlarge, etc"
        AllowedValues:
            - t2.micro
            - t2.small
            - t2.medium
            - m3.medium
            - m3.large
            - m3.xlarge
            - m4.large
            - m4.xlarge
            - m4.2xlarge
    WebVolumeSize:
        Type: Number
        Default: 10
        Description: "Instance EBS volume size in GB, 10, 25, 100, etc"
        MinValue: 10
        MaxValue: 100
    DatabaseAddress:
        Type: String
        Default: mydatabase.domain.com
        Description: "Database Address or hostname"
    DatabaseName:
        Type: String
        Default: mydb
        Description: "Database name"
        MinLength: 1
        MaxLength: 64
        AllowedPattern: "[a-zA-Z0-9]*"
    DatabaseUsername:
        Description: "Database username"
        Default: mydbuser
        Type: String
        MinLength: 1
        MaxLength: 41
        AllowedPattern: "[a-zA-Z0-9]*"
    Vpc:
        Type: AWS::EC2::VPC::Id
        Description: "VPC where the instance will live"
    Subnet:
        Type: AWS::EC2::Subnet::Id
        Description: "SubnetId where EC2 instance will live"
    KeyName:
        Type: AWS::EC2::KeyPair::KeyName
        Description: "KeyName used to decrypt Windows password"

Mappings:
    RegionMap:
        us-east-1:
            AMI: ami-c58c1dd3
            DeviceName: /dev/xvda
        us-east-2:
            AMI: ami-4191b524
            DeviceName: /dev/xvda
        us-west-1:
            AMI: ami-7a85a01a
            DeviceName: /dev/xvda
        us-west-2:
            AMI: ami-4836a428
            DeviceName: /dev/xvda
        canada-central-1:
            AMI: ami-0bd66a6f
            DeviceName: /dev/xvda
        eu-west-1:
            AMI: ami-01ccc867
            DeviceName: /dev/xvda
        eu-central-1:
            AMI: ami-b968bad6
            DeviceName: /dev/xvda
        eu-west-2:
            AMI: ami-b6daced2
            DeviceName: /dev/xvda
        ap-southeast-1:
            AMI: ami-fc5ae39f
            DeviceName: /dev/xvda
        ap-southeast-2:
            AMI: ami-162c2575
            DeviceName: /dev/xvda
        ap-northeast-2:
            AMI: ami-9d15c7f3
            DeviceName: /dev/xvda
        ap-northeast-1:
            AMI: ami-923d12f5
            DeviceName: /dev/xvda
        ap-south-1:
            AMI: ami-52c7b43d
            DeviceName: /dev/xvda
        sa-east-1:
            AMI: ami-37cfad5b
            DeviceName: /dev/xvda
    
Resources:
    WebRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - sts:AssumeRole
                      Principal:
                        Service: 
                            - ec2.amazonaws.com
    WebInstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Path: /
            Roles:
                - !Ref WebRole
    WebSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: "Web SG"
            VpcId:
                Ref: Vpc
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: !Ref CustomerAddress
                - IpProtocol: icmp
                  FromPort: -1
                  ToPort: -1
                  CidrIp: !Ref CustomerAddress
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  CidrIp: 0.0.0.0/0
                - IpProtocol: udp
                  FromPort: 0
                  ToPort: 65535
                  CidrIp: 0.0.0.0/0
                - IpProtocol: icmp
                  FromPort: -1
                  ToPort: -1
                  CidrIp: 0.0.0.0/0
            Tags:
                - Key: Name
                  Value: !Join [ "", [ !Ref Project, -WEB-SG ] ]
                - Key: Customer
                  Value: !Ref Customer
                - Key: Project
                  Value: !Ref Project
                - Key: Architect
                  Value: !Ref Architect
                - Key: ArchitectEmail
                  Value: !Ref ArchitectEmail

    # Web Instances
    WebInstance:
        DependsOn: "CacheCluster"
        Type: AWS::EC2::Instance
        Properties:
            ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", AMI ]
            IamInstanceProfile: !Ref WebInstanceProfile
            InstanceType: !Ref WebInstanceType
            SecurityGroupIds:
                - !Ref WebSecurityGroup
            SubnetId: !Ref Subnet
            KeyName: !Ref KeyName
            BlockDeviceMappings:
                - DeviceName: !FindInMap [ RegionMap, !Ref "AWS::Region", DeviceName ]
                  Ebs:
                      VolumeSize: !Ref WebVolumeSize
                      VolumeType: gp2
            Tags:
                - Key: Name
                  Value: !Join [ "", [ !Ref Project, -WEB ] ]
                - Key: Customer
                  Value: !Ref Customer
                - Key: Project
                  Value: !Ref Project
                - Key: Architect
                  Value: !Ref Architect
                - Key: ArchitectEmail
                  Value: !Ref ArchitectEmail
            UserData:
                Fn::Base64: !Sub  |
                    #!/bin/sh
                    yum -y install git
                    git clone https://github.com/awslabs/elasticache-hybrid-architecture-demo
                    cd elasticache-hybrid-architecture-demo
                    sh ./bootstrap.sh ${CacheCluster.RedisEndpoint.Address} ${CacheCluster.RedisEndpoint.Port} ${DatabaseAddress} ${DatabaseUsername} ${DatabaseName}

    # Amazon ElastiCache
    CacheSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: ElastiCache SG
            VpcId:
                Ref: Vpc
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 6379
                  ToPort: 6379
                  CidrIp: !Ref CustomerAddress
                - IpProtocol: tcp
                  FromPort: 6379
                  ToPort: 6379
                  SourceSecurityGroupId: !GetAtt WebSecurityGroup.GroupId
            Tags:
                - Key: Name
                  Value: !Join [ "", [ !Ref Project, -CACHE-SG ] ]
                - Key: Customer
                  Value: !Ref Customer
                - Key: Project
                  Value: !Ref Project
                - Key: Architect
                  Value: !Ref Architect
                - Key: ArchitectEmail
                  Value: !Ref ArchitectEmail
    CacheCluster:
        Type: AWS::ElastiCache::CacheCluster
        Properties:
            AutoMinorVersionUpgrade: true
            CacheNodeType: !Ref CacheInstanceType
#            AZMode: "cross-az" # used with 2 or more nodes
            ClusterName: !Ref CacheClusterName
            Engine: !Ref CacheEngine
            EngineVersion: !Ref CacheEngineVersion
            NumCacheNodes: 1
            Port: !Ref CachePort
            VpcSecurityGroupIds:
                - !Ref CacheSecurityGroup
            Tags:
                - Key: Name
                  Value: !Join [ "", [ !Ref Project, -CACHE-CLUSTER ] ]
                - Key: Customer
                  Value: !Ref Customer
                - Key: Project
                  Value: !Ref Project
                - Key: Architect
                  Value: !Ref Architect
                - Key: ArchitectEmail
                  Value: !Ref ArchitectEmail

Outputs:
    WebInstance:
        Value: !GetAtt WebInstance.PublicDnsName
    CacheCluster:
        Value: !GetAtt CacheCluster.RedisEndpoint.Address
    DemoScript:
        Value: !Join [ "", [ "http://", !GetAtt WebInstance.PublicDnsName, "/demo.php" ] ]
